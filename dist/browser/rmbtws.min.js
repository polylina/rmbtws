(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/*!******************************************************************************
 * @license
 * Copyright 2015-2017 Thomas Schreiber
 * Copyright 2017-2019 Rundfunk und Telekom Regulierungs-GmbH (RTR-GmbH)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * The source code for this project is available at
 * https://github.com/rtr-nettest/rmbtws
 *****************************************************************************!*/
"use strict";function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function RMBTTest(e,t){function n(e){void 0!==w&&w===e||(w=e,M=nowMs(),E&&E(e))}function s(e,t,s){var i=(e.test_server_encryption?"wss://":"ws://")+e.test_server_address+":"+e.test_server_port;p.debug(i);var d=function(){return{IGNORE:function(){},CALLGLOBALHANDLER:function(e){e&&p.error("connection closed",e),x(RMBTError.CONNECT_FAILED)},TRYRECONNECT:function(){x(RMBTError.CONNECT_FAILED)}}}();t.onStateEnter(TestState.INIT_DOWN,function(){n(TestState.INIT_DOWN),p.debug(t.id+": start short download"),m=_,a(t,S.pretestDurationMs)}),t.onStateEnter(TestState.PING,function(){n(TestState.PING),p.debug(t.id+": starting ping"),0===t.id?u(t):t.triggerNextState()}),t.onStateEnter(TestState.DOWN,function(){if(n(TestState.DOWN),D.length>0){var s=r(D,S.downloadThreadsLimitsMbit,!1);C=s.numThreads,I&&(m=s.chunkSize),D=[]}t.id<C?c(t,e.test_duration):(t.socket.onerror=d.IGNORE,t.socket.onclose=d.IGNORE,t.triggerNextState())}),t.onStateEnter(TestState.CONNECT_UPLOAD,function(){n(TestState.INIT_UP),t.socket.onerror=d.IGNORE,t.socket.onclose=d.IGNORE,t.socket.close(),o(t,i,e.test_token,d.CALLGLOBALHANDLER)}),t.onStateEnter(TestState.INIT_UP,function(){m=_,l(t,S.pretestDurationMs)}),t.onStateEnter(TestState.UP,function(){if(n(TestState.UP),D.length>0){var s=r(D,S.uploadThreadsLimitsMbit,!0);U=s.numThreads,I&&(m=s.chunkSize),D=[]}t.id<U?T(t,e.test_duration):(t.socket.onerror=d.IGNORE,t.socket.onclose=d.IGNORE,t.socket.readyState!==WebSocket.CLOSED&&t.socket.close(),t.triggerNextState())}),t.onStateEnter(TestState.END,function(){t.socket.readyState!==WebSocket.CLOSED&&t.socket.close(),0===t.id&&s()}),t.setState(TestState.INIT),n(TestState.INIT),o(t,i,e.test_token,d.CALLGLOBALHANDLER)}function o(e,t,n,s){try{e.socket=new WebSocket(t)}catch(e){return void x(RMBTError.SOCKET_INIT_FAILED)}e.socket.binaryType="arraybuffer",e.socket.onerror=s,e.socket.onclose=s,e.socket.onmessage=function(t){if(0===t.data.indexOf("CHUNKSIZE")){var o=t.data.trim().split(" ");4===o.length?(h=parseInt(o[1]),_=parseInt(o[2]),v=parseInt(o[3])):(h=parseInt(o[1]),_=h),p.debug(e.id+": Chunksizes: min "+_+", max: "+v+", default: "+h)}else if(0===t.data.indexOf("RMBTv")){var r=t.data.substring(5).trim();S.client_version=r,0===r.indexOf("1.")?I=!0:0===r.indexOf("0.3")?I=!1:p.warn("unknown server version: "+r)}else"ACCEPT TOKEN QUIT\n"===t.data?e.socket.send("TOKEN "+n+"\n"):"OK\n"===t.data&&e.state===TestState.INIT?p.debug(e.id+": Token accepted"):"ERR\n"===t.data?(s(),p.error("got error msg")):0===t.data.indexOf("ACCEPT GETCHUNKS")&&e.triggerNextState()}}function r(e,t,n){G=e.reduce(function(e,t){return e+t}),p.debug("total: circa "+G/1e3+" KB/sec"),p.debug("total: circa "+8*G/1e6+" MBit/sec");var s=8*G/1e6,o=0;Object.keys(t).forEach(function(e){s>e&&(o=t[e])}),o=Math.min(B,o),p.debug("set number of threads to be used in upcoming speed test to: "+o);var r=G/(1e3/(S.measurementPointsTimespan/2));if(r-=r%1024,r=Math.max(_,r),r=Math.min(v,r),p.debug("calculated chunksize for upcoming speed test "+r/1024+" KB"),n){var a=Number.POSITIVE_INFINITY;Object.keys(y).forEach(function(e){Math.abs(r-e)<Math.abs(r-a)?("string"==typeof e&&(e=parseInt(e)),a=e):(delete y[e],delete L[e])}),r=a,p.debug("fallback to existing chunksize for upcoming speed test "+r/1024+" KB")}return{numThreads:o,chunkSize:r,bytesPerSecs:G}}function a(e,t){var n=e.socket.onmessage,s=nowMs(),o=1,r=0,a=m;!function u(){i(e,o,a,function(i){r+=o*a,p.debug(e.id+": "+i);var d=parseInt(i.substring(5));nowMs()-s>t?(D.push(o*a/(d/1e9)),e.socket.onmessage=n):o<8||!I?(o*=2,u()):(a=Math.min(2*a,v),u())})}()}function i(e,t,n,s){var o=e.socket,r=t,a=m*t,i=0,u=null,d=function(e,t){var n=new Uint8Array(e.length+t.length);return n.set(e,0),n.set(t,e.length),n},c=function(e){if("string"!=typeof e.data){var t=!1;u=null===u?new Uint8Array(e.data):d(u,new Uint8Array(e.data)),i+=e.data.byteLength,u.length===n&&(r--,t=!0),t&&255===u[u.length-1]?(o.onmessage=function(e){var t=e.data;s(t)},o.send("OK\n"),L[n]=u.buffer,u=null):(y.hasOwnProperty(n)||(y[n]=[]),t&&(y[n].length<S.savedChunks&&y[n].push(u.buffer),u=null))}};o.onmessage=c,p.debug(e.id+": downloading "+t+" chunks, "+a/1e3+" KB");var l="GETCHUNKS "+t+(n!==h?" "+n:"")+"\n";o.send(l)}function u(e){var t=e.socket.onmessage,n=S.numPings,s=performance.now();d(e,function o(r){if(e.result.pings.push(r),b.pings=[].concat(_toConsumableArray(e.result.pings)),n===S.numPings-1&&(O.durationPingMs=(e.result.pings[1].timeNs-e.result.pings[0].timeNs)/1e6*S.numPings,p.debug(e.id+": PING phase will take approx "+O.durationPingMs+" ms")),p.debug(e.id+": PING "+r.client+" ns client; "+r.server+" ns server"),n--,S.doPingIntervalMilliseconds>0&&0===n){performance.now()-s<S.doPingIntervalMilliseconds&&(n=1)}if(n>0)e.socket.onmessage=function(t){"ACCEPT GETCHUNKS GETTIME PUT PUTNORESULT PING QUIT\n"===t.data?d(e,o):p.error("unexpected error during ping test")};else{for(var a=[],i=0;i<e.result.pings.length;i++)a.push(e.result.pings[i].client);b.ping_client_median=Math.median(a),b.ping_client_shortest=Math.min.apply(Math,a);for(var u=[],c=0;c<e.result.pings.length;c++)u.push(e.result.pings[c].server);b.ping_server_median=Math.median(u),b.ping_server_shortest=Math.min.apply(Math,u),p.debug(e.id+": median client: "+Math.round(b.ping_client_median/1e3)/1e3+" ms; median server: "+Math.round(b.ping_server_median/1e3)/1e3+" ms"),p.debug(e.id+": shortest client: "+Math.round(b.ping_client_shortest/1e3)/1e3+" ms; shortest server: "+Math.round(b.ping_server_shortest/1e3)/1e3+" ms"),e.socket.onmessage=t}})}function d(e,t){var n=void 0,s=void 0,o=function(o){if("PONG\n"===o.data){var r=nowNs();s=r-n,e.socket.send("OK\n")}else if(0===o.data.indexOf("TIME")){var a=new RMBTPingResult;a.client=s,a.server=parseInt(o.data.substring(5)),a.timeNs=n,t(a)}};e.socket.onmessage=o,n=nowNs(),e.socket.send("PING\n")}function c(e,t){var n=e.socket.onmessage,s=0,o=0,r=-1,a=void 0,i=void 0,u=null,d=null;a=window.setInterval(function(){if(null!==u&&r!==o){r=o;var t=nowNs();p.debug(e.id+": "+i+"|"+S.measurementPointsTimespan+"|"+t+"|"+o);var c=new Uint8Array(u,u.byteLength-1,1),g=d-l;e.result.down.push({duration:g,bytes:s}),i=t,c[0]>=255&&(p.debug(e.id+": received end chunk"),window.clearInterval(a),e.socket.onmessage=function(t){p.debug(t.data),e.socket.onmessage=n},e.socket.send("OK\n"))}},S.measurementPointsTimespan);var c=function(e){o++,s+=e.data.byteLength,d=nowNs(),u=e.data};e.socket.onmessage=c;var l=nowNs();e.socket.send("GETTIME "+t+(m!==h?" "+m:"")+"\n")}function l(e,t){var n=e.socket.onmessage,s=nowMs(),o=1,r=0,a=m;window.setTimeout(function(){var e=nowMs(),n=e-s;p.debug("diff:"+(n-t)+" ("+(n-t)/t+" %)")},t);!function i(){g(e,o,a,function(u){if(r+=o*a,p.debug(e.id+": "+u),nowMs()-s>t){e.socket.onmessage=n;var d=parseInt(u.substring(5));D.push(o*a/(d/1e9))}else{var c=2*a;o<8||!L.hasOwnProperty(c)||!I?(o*=2,i()):(a=Math.min(2*a,v),i())}})}()}function g(e,t,n,s){var o=e.socket;o.onmessage=function(e){0!==e.data.indexOf("OK")&&0!==e.data.indexOf("ACCEPT")&&s(e.data)},p.debug(e.id+": uploading "+t+" chunks, "+n*t/1e3+" KB"),o.send("PUTNORESULT"+(I?" "+n:"")+"\n");for(var r=0;r<t;r++){var a=void 0;a=r===t-1?L[n]:y[n][0],o.send(a)}}function T(e,t){var n=e.socket.onmessage,s=G/2/U,o=1.5*G/U,r=document.hidden?o:s,a=function(){r=document.hidden?o:s,p.debug("document visibility changed to: "+document.hidden)};document.addEventListener("visibilitychange",a);var i=Math.ceil(G/U/m),u=!1,d=!0,c=-1,l=0,g=function s(){u||(p.debug(e.id+": is 7.2 sec in, got data for "+c),c<1e9*t&&l<3e3?(window.setTimeout(s,250),l+=250):(p.debug(e.id+": didn't finish, timeout extended by "+l+" ms, last info for "+c),e.socket.onerror=function(){},e.socket.onclose=function(){},e.socket.close(),e.socket.onmessage=n,p.debug(e.id+": socket now closed: "+e.socket.readyState),document.removeEventListener("visibilitychange",a),e.triggerNextState()))},T=function t(){if(e.socket.bufferedAmount<r)for(var n=0;n<i;n++)e.socket.send(y[m][n%y[m].length]);if(!d)return!1;setTimeout(t,0)};window.setTimeout(g,1e3*t+200),window.setTimeout(function(){d=!1,e.socket.onclose=function(){},e.socket.send(L[m]),e.socket.send("QUIT\n")},1e3*t),p.debug(e.id+": set timeout");var f=1e6*S.measurementPointsTimespan,v=/TIME (\d+) BYTES (\d+)/,_=/TIME (\d+)/,I=function(t){"OK\n"===t.data&&T();var s=v.exec(t.data);if(null!==s){var o={duration:parseInt(s[1]),bytes:parseInt(s[2])};o.duration-c>f&&(c=o.duration,e.result.up.push(o))}else null!==(s=_.exec(t.data))&&(u=!0,p.debug("Upload duration: "+s[1]),e.socket.onmessage=n,document.removeEventListener("visibilitychange",a))};e.socket.onmessage=I,e.socket.send("PUT"+(m!==h?" "+m:"")+"\n")}function f(e){return{client_language:"de",client_name:S.client,client_uuid:S.uuid,client_version:S.client_version,client_software_version:S.client_software_version,geoLocations:b.geoLocations,model:S.model,network_type:98,platform:S.platform,product:S.product,pings:b.pings,test_bytes_download:b.bytes_download,test_bytes_upload:b.bytes_upload,test_nsec_download:b.nsec_download,test_nsec_upload:b.nsec_upload,test_num_threads:C,num_threads_ul:U,test_ping_shortest:b.ping_server_shortest,test_speed_download:b.speed_download,test_speed_upload:b.speed_upload,test_token:e.test_token,test_uuid:e.test_uuid,time:b.beginTime,timezone:S.timezone,type:"DESKTOP",version_code:"1",speed_detail:b.speedItems,user_server_selection:S.userServerSelection}}var p=log.getLogger("rmbtws"),m=null,v=4194304,_=0,h=4096,I=!1,S=void 0,k=void 0,b=null,N=null,E=null,w=TestState.INIT,M=null,O={durationInitMs:2500,durationPingMs:1e4,durationUpMs:-1,durationDownMs:-1},P=new RMBTIntermediateResult,R=[],y={},L={},A=null,B=0,C=0,U=0,D=[],G=0;this.onError=function(e){N=e},this.onStateChange=function(e){E=e};var x=function(e){if(p.debug("error occurred during websocket test:",e),e!==RMBTError.NOT_SUPPORTED&&n(TestState.ERROR),null!==N){var t=N;N=null,t(e)}};this.startTest=function(){if(void 0===window.WebSocket)return void x(RMBTError.NOT_SUPPORTED);n(TestState.INIT),b=new RMBTTestResult,k.getDataCollectorInfo(),k.obtainControlServerRegistration(function(e){B=parseInt(e.test_numthreads),A=new CyclicBarrier(B),O.durationDownMs=1e3*e.test_duration,O.durationUpMs=1e3*e.test_duration,null!==TestEnvironment.getTestVisualization()&&TestEnvironment.getTestVisualization().updateInfo(e.test_server_name,e.client_remote_ip,e.provider,e.test_uuid,e.open_test_uuid);var t=function(){p.debug("got geolocation, obtaining token and websocket address");var t=function(){n(TestState.INIT),b.beginTime=Date.now();for(var t=0;t<B;t++){var r=new RMBTTestThread(A);r.id=t,b.addThread(r.result),s(e,r,function(){p.info("All tests finished"),o.stop(),b.geoLocations=o.getResults(),b.calculateAll(),k.submitResults(f(e),function(){n(TestState.END)},function(){x(RMBTError.SUBMIT_FAILED)})}),R.push(r)}};0===e.test_wait?t():(p.info("test scheduled for start in "+e.test_wait+" second(s)"),n(TestState.WAIT),self.setTimeout(function(){t()},1e3*e.test_wait))},o=void 0;null!==TestEnvironment.getGeoTracker()?(o=TestEnvironment.getGeoTracker(),t()):(o=new GeoTracker,p.debug("getting geolocation"),o.start(function(){t()},TestEnvironment.getTestVisualization()))},function(){x(RMBTError.REGISTRATION_FAILED)})},this.getIntermediateResult=function(){P.status=w;var e=nowNs()/1e6-M;switch(P.status){case TestState.WAIT:P.progress=0;break;case TestState.INIT:case TestState.INIT_DOWN:case TestState.INIT_UP:P.progress=e/O.durationInitMs;break;case TestState.PING:P.progress=e/O.durationPingMs;break;case TestState.DOWN:P.progress=e/O.durationDownMs;break;case TestState.UP:P.progress=e/O.durationUpMs;break;case TestState.END:P.progress=1;break;case TestState.ERROR:case TestState.ABORTED:P.progress=0}if(isNaN(P.progress)&&(P.progress=0),P.progress=Math.min(1,P.progress),null!==b){if(P.status!==TestState.PING&&P.status!==TestState.DOWN||(P.pingNano=b.ping_server_median,P.pings=b.pings),P.status===TestState.DOWN||P.status==TestState.INIT_UP){var t=RMBTTestResult.calculateOverallSpeedFromMultipleThreads(b.threads,function(e){return e.down});P.downBitPerSec=t.speed,P.downBitPerSecLog=(Math.log10(P.downBitPerSec/1e6)+2)/4}if(P.status===TestState.UP||P.status==TestState.INIT_UP){var n=RMBTTestResult.calculateOverallSpeedFromMultipleThreads(b.threads,function(e){return e.up});P.upBitPerSec=n.speed,P.upBitPerSecLog=(Math.log10(P.upBitPerSec/1e6)+2)/4}}return P},this.getState=function(){return"INIT"},function(e,t){S=e,k=t}(e,t)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.RMBTTest=RMBTTest;
"use strict";function runCallback(){void 0!=geo_callback&&"function"==typeof geo_callback&&window.setTimeout(function(){geo_callback()},1)}function getCurLocation(){return curGeoPos}function getLocation(o,e,t,n){var i=document.getElementById("infogeo");if(geo_callback=n,!navigator.geolocation){var a=getCookie("coords");if(a){var r=JSON.parse(a);r&&r.lat>0&&r.long>0&&testVisualization.setLocation(r.lat,r.long)}else i.innerHTML=Lang.getString("NotSupported");return void runCallback()}runCallback(),TestEnvironment.getGeoTracker().start(function(o,e){if(!0!==o)if(e)switch(e.code){case e.PERMISSION_DENIED:i.innerHTML=Lang.getString("NoPermission");break;case e.TIMEOUT:break;case e.POSITION_UNAVAILABLE:i.innerHTML=Lang.getString("NotAvailable");break;case e.UNKNOWN_ERROR:i.innerHTML=Lang.getString("NotAvailable")+"("+e.code+")"}else i.innerHTML=Lang.getString("NotAvailable")},TestEnvironment.getTestVisualization())}var curGeoPos=void 0,geo_callback=void 0,loc_timeout=void 0,GeoTracker=function(){function o(){e=[],a=!1}var e=void 0,t=void 0,n=null,i=void 0,a=void 0;o.prototype.start=function(o,l){if(t=o,void 0!==l&&(n=l),navigator.geolocation)navigator.geolocation.getCurrentPosition(function(o){0===e.length&&(a=!0,r(o))},c,{enableHighAccuracy:!1,timeout:2e3,maximumAge:6e4}),i=navigator.geolocation.watchPosition(r,c,{enableHighAccuracy:!0,timeout:1/0,maximumAge:0});else{var u=t;t=null,u(!1)}window.setTimeout(function(){c()},2e3)};var r=function(o){if(1===e.length&&a&&(e=[],a=!1),e.push({geo_lat:o.coords.latitude,geo_long:o.coords.longitude,accuracy:o.coords.accuracy,altitude:o.coords.altitude,bearing:o.coords.heading,speed:o.coords.speed,tstamp:o.timestamp,provider:"Browser"}),null!==t){var i=t;t=null,i(!0)}null!==n&&n.setLocation(o.coords.latitude,o.coords.longitude),l(o)},c=function(o){if(null!==t){var e=t;t=null,e(!1,o)}},l=function(o){var e={};e.lat=o.coords.latitude,e.long=o.coords.longitude,e.accuracy=o.coords.accuracy,e.altitude=o.coords.altitude,e.heading=o.coords.heading,e.speed=o.coords.speed,e.tstamp=o.timestamp,e=JSON.stringify(e),setCookie("coords",e,3600)};return o.prototype.stop=function(){navigator.geolocation&&navigator.geolocation.clearWatch(i)},o.prototype.getResults=function(){var o=null;return e=e.filter(function(e){return null==o?(o=e,!0):!Object.keys(e).every(function(t){return o.hasOwnProperty(t)&&o[t]===e[t]})&&(o=e,!0)})},o}();void 0===window.setCookie&&(window.setCookie=function(o,e,t){var n=new Date,i=n.getTime();i+=1e3*t,n.setTime(i);var a=encodeURIComponent(e)+(null==t?";":"; expires="+n.toUTCString()+";");document.cookie=o+"="+a+" path=/;"});
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var RMBTControlServerCommunication=exports.RMBTControlServerCommunication=function(e,r){var t=e,n=log.getLogger("rmbtws");r=r||{};var o=r.headers||{"Content-Type":"application/json"};return{obtainControlServerRegistration:function(e,r){var i={version:t.version,language:t.language,uuid:t.uuid,type:t.type,version_code:t.version_code,client:t.client,timezone:t.timezone,time:(new Date).getTime()};Object.assign(i,t.additionalRegistrationParameters),"undefined"!=typeof userServerSelection&&userServerSelection>0&&"undefined"!=typeof UserConf&&void 0!==UserConf.preferredServer&&"default"!==UserConf.preferredServer&&(i.prefer_server=UserConf.preferredServer,i.user_server_selection=userServerSelection);var s=void 0;fetch(t.controlServerURL+t.controlServerRegistrationResource,{method:"POST",headers:o,body:JSON.stringify(i)}).then(function(e){return e.json()}).then(function(r){s=r;var t=new RMBTControlServerRegistrationResponse(r);e(t)}).catch(function(e){s=e,n.error("error getting testID"),r()}).finally(function(){null!=_registrationCallback&&"function"==typeof _registrationCallback&&_registrationCallback({response:s,request:i})})},getDataCollectorInfo:function(){fetch(t.controlServerURL+t.controlServerDataCollectorResource,{method:"GET",headers:o}).then(function(e){return e.json()}).then(function(e){t.product=e.agent.substring(0,Math.min(150,e.agent.length)),t.model=e.product,t.os_version=e.version}).catch(function(){n.error("error getting data collection response")})},submitResults:function(e,r,i){Object.assign(e,t.additionalSubmissionParameters);var s=JSON.stringify(e);n.debug("Submit size: "+s.length);var a=void 0;fetch(t.controlServerURL+t.controlServerResultResource,{method:"POST",headers:o,body:s}).then(function(e){return e.json()}).then(function(t){a=t,n.debug(e.test_uuid),r(!0)}).catch(function(e){a=e,n.error("error submitting results"),i(!1)}).finally(function(){null!==_submissionCallback&&"function"==typeof _submissionCallback&&_submissionCallback({response:a,request:e})})}}};
"use strict";function RMBTIntermediateResult(){}Object.defineProperty(exports,"__esModule",{value:!0});var TestEnvironment=exports.TestEnvironment=function(){var e=null,t=null;return{getTestVisualization:function(){return e},getGeoTracker:function(){return t},init:function(r,n){void 0===r&&(r=new TestVisualization),void 0===n&&(n=new GeoTracker),e=r,t=n}}}(),TestState={WAIT:"WAIT",INIT:"INIT",INIT_DOWN:"INIT_DOWN",PING:"PING",DOWN:"DOWN",CONNECT_UPLOAD:"CONNECT_UPLOAD",INIT_UP:"INIT_UP",UP:"UP",END:"END",ERROR:"ERROR",ABORTED:"ABORTED",LOCATE:"LOCATE",LOCABORTED:"LOCABORTED",SPEEDTEST_END:"SPEEDTEST_END",QOS_TEST_RUNNING:"QOS_TEST_RUNNING",QOS_END:"QOS_END"};RMBTIntermediateResult.prototype.setLogValues=function(){var e=function(e){return e<1e4?0:(2+Math.log(e/1e6/Math.LN10))/4};this.downBitPerSecLog=e(downBitPerSec),this.upBitPerSecLog=e(upBitPerSec)},RMBTIntermediateResult.prototype.pingNano=-1,RMBTIntermediateResult.prototype.downBitPerSec=-1,RMBTIntermediateResult.prototype.upBitPerSec=-1,RMBTIntermediateResult.prototype.status=TestState.INIT,RMBTIntermediateResult.prototype.progress=0,RMBTIntermediateResult.prototype.downBitPerSecLog=-1,RMBTIntermediateResult.prototype.upBitPerSecLog=-1,RMBTIntermediateResult.prototype.remainingWait=-1;
"use strict";var TestVisualization=function(){function t(t,s){this.successCallback=t,this.errorCallback=s}return t.prototype.setRMBTTest=function(t){},t.prototype.updateInfo=function(t,s,a,c,o){},t.prototype.setStatus=function(t){if("ERROR"===t||"ABORTED"===t){if(this.errorCallback){var s=this.errorCallback;this.errorCallback=null,s()}}else if("END"===t&&null!==_successCallback){var s=this.successCallback;this.successCallback=null,s()}},t.prototype.setLocation=function(t,s){},t.prototype.startTest=function(){},t}();
"use strict";function RMBTTestThread(t){var e=log.getLogger("rmbtws"),o={},s=t;return{setState:function(t){this.state=t,e.debug(this.id+": reached state: "+t);var r=this;s.await(function(){if(e.debug(r.id+": all threads reached state: "+t),void 0!==o[t]&&null!==o[t]){(0,o[t])()}else e.info(r.id+": no callback registered for state: "+t)})},onStateEnter:function(t,e){o[t]=e},retriggerState:function(){setState(this.state)},triggerNextState:function(){var t=[TestState.INIT,TestState.INIT_DOWN,TestState.PING,TestState.DOWN,TestState.CONNECT_UPLOAD,TestState.INIT_UP,TestState.UP,TestState.END];if(this.state!==TestState.END){var o=t[t.indexOf(this.state)+1];e.debug(this.id+": triggered state "+o),this.setState(o)}},id:-1,socket:null,result:new RMBTThreadTestResult}}function RMBTTestResult(){this.pings=[],this.speedItems=[],this.threads=[]}function RMBTThreadTestResult(){this.down=[],this.up=[],this.pings=[]}function RMBTPingResult(){}Object.defineProperty(exports,"__esModule",{value:!0});var RMBTTestConfig=exports.RMBTTestConfig=function(){function t(t,e,o){this.language=t,this.controlServerURL=e+"/"+o,"undefined"!=typeof Intl&&Intl.DateTimeFormat().resolvedOptions().timeZone&&(this.timezone=Intl.DateTimeFormat().resolvedOptions().timeZone.replace("Europe/Berlin","Europe/Vienna"))}return t.prototype.version="0.3",t.prototype.language,t.prototype.uuid="",t.prototype.type="DESKTOP",t.prototype.version_code="0.3",t.prototype.client_version="0.3",t.prototype.client_software_version="0.9.1",t.prototype.os_version=1,t.prototype.platform="RMBTws",t.prototype.model="Websocket",t.prototype.product="Chrome",t.prototype.client="RMBTws",t.prototype.timezone="Europe/Vienna",t.prototype.controlServerURL,t.prototype.controlServerRegistrationResource="/testRequest",t.prototype.controlServerResultResource="/result",t.prototype.controlServerDataCollectorResource="/requestDataCollector",t.prototype.pretestDurationMs=2e3,t.prototype.savedChunks=4,t.prototype.measurementPointsTimespan=40,t.prototype.numPings=10,t.prototype.doPingIntervalMilliseconds=-1,t.prototype.downloadThreadsLimitsMbit={0:1,1:3,100:5},t.prototype.uploadThreadsLimitsMbit={0:1,30:2,80:3,150:5},t.prototype.userServerSelection=void 0!==window.userServerSelection?userServerSelection:0,t.prototype.additionalRegistrationParameters={},t.prototype.additionalSubmissionParameters={},t}(),RMBTControlServerRegistrationResponse=function(){function t(t){Object.assign(this,t),this.test_duration=parseInt(t.test_duration)}return t.prototype.client_remote_ip,t.prototype.provider,t.prototype.test_server_encryption="",t.prototype.test_numthreads,t.prototype.test_server_name,t.prototype.test_uuid,t.prototype.test_id,t.prototype.test_token,t.prototype.test_server_address,t.prototype.test_duration,t.prototype.result_url,t.prototype.test_wait,t.prototype.test_server_port,t}();RMBTTestResult.prototype.addThread=function(t){this.threads.push(t)},RMBTTestResult.prototype.ip_local=null,RMBTTestResult.prototype.ip_server=null,RMBTTestResult.prototype.port_remote=null,RMBTTestResult.prototype.num_threads=null,RMBTTestResult.prototype.encryption="NONE",RMBTTestResult.prototype.ping_shortest=-1,RMBTTestResult.prototype.ping_median=-1,RMBTTestResult.prototype.client_version=null,RMBTTestResult.prototype.pings=[],RMBTTestResult.prototype.speed_download=-1,RMBTTestResult.prototype.speed_upload=-1,RMBTTestResult.prototype.speedItems=[],RMBTTestResult.prototype.bytes_download=-1,RMBTTestResult.prototype.nsec_download=-1,RMBTTestResult.prototype.bytes_upload=-1,RMBTTestResult.prototype.nsec_upload=-1,RMBTTestResult.prototype.totalDownBytes=-1,RMBTTestResult.prototype.totalUpBytes=-1,RMBTTestResult.prototype.beginTime=-1,RMBTTestResult.prototype.geoLocations=[],RMBTTestResult.calculateOverallSpeedFromMultipleThreads=function(t,e){for(var o=t.length,s=1/0,r=0;r<o;r++){var p=e(t[r]);p.length>0&&p[p.length-1].duration<s&&(s=p[p.length-1].duration)}for(var n=0,i=0;i<o;i++){var a=t[i],l=e(a),u=l.length;if(null!==a&&u>0){for(var d=u,T=0;T<u;T++)if(l[T].duration>=s){d=T;break}var R=void 0;if(l[d].duration===s)R=l[u-1].bytes;else{var y=0===d?0:l[d-1].bytes,h=l[d].bytes,c=h-y,v=0===d?0:l[d-1].duration,g=l[d].duration,_=g-v,M=s-v,B=M/_,f=Math.round(c*B);f<0&&(f=0),R=y+f}n+=R}}return{bytes:n,nsec:s,speed:8*n/(s/1e9)}},RMBTTestResult.prototype.calculateAll=function(){for(var t=0;t<this.threads.length;t++){var e=this.threads[t].down;if(e.length>0)for(var o=0;o<e.length;o++)this.speedItems.push({direction:"download",thread:t,time:e[o].duration,bytes:e[o].bytes})}var s=RMBTTestResult.calculateOverallSpeedFromMultipleThreads(this.threads,function(t){return t.down});this.speed_download=s.speed/1e3,this.bytes_download=s.bytes,this.nsec_download=s.nsec;for(var r=0;r<this.threads.length;r++){var p=this.threads[r].up;if(p.length>0)for(var n=0;n<p.length;n++)this.speedItems.push({direction:"upload",thread:r,time:p[n].duration,bytes:p[n].bytes})}s=RMBTTestResult.calculateOverallSpeedFromMultipleThreads(this.threads,function(t){return t.up}),this.speed_upload=s.speed/1e3,this.bytes_upload=s.bytes,this.nsec_upload=s.nsec;for(var i=this.threads[0].pings,a=0;a<i.length;a++)this.pings.push({value:i[a].client,value_server:i[a].server,time_ns:i[a].timeNs});for(var l=0;l<this.geoLocations.length;l++){var u=this.geoLocations[l];u.time_ns=1e6*(u.tstamp-this.beginTime)}},RMBTThreadTestResult.prototype.down=null,RMBTThreadTestResult.prototype.up=null,RMBTThreadTestResult.prototype.pings=null,RMBTThreadTestResult.prototype.totalDownBytes=-1,RMBTThreadTestResult.prototype.totalUpBytes=-1,RMBTPingResult.prototype.client=-1,RMBTPingResult.prototype.server=-1,RMBTPingResult.prototype.timeNs=-1;var RMBTError={NOT_SUPPORTED:"WebSockets are not supported",SOCKET_INIT_FAILED:"WebSocket initialization failed",CONNECT_FAILED:"connection to test server failed",SUBMIT_FAILED:"Error during submission of test results",REGISTRATION_FAILED:"Error during test registration"};
"use strict";function nowMs(){return window.performance.now()}function nowNs(){return Math.round(1e6*window.performance.now())}function CyclicBarrier(n){var o=n,e=[],r=function(){var n=e.slice();e=[],self.setTimeout(function(){for(var e=0;e<o;e++)n[e]()},1)};return{await:function(n){e.push(n),e.length===o&&r()}}}!function(){if(Date.now||(Date.now=function(){return(new Date).getTime()}),void 0===window.performance&&(window.performance={}),!window.performance.now||void 0===window.performance.now){var n=Date.now();performance.timing&&performance.timing.navigationStart&&(n=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-n}}}(),Math.median=function(n){n.sort(function(n,o){return n-o});var o=Math.floor(n.length/2);return n.length%2?n[o]:(n[o-1]+n[o])/2},Math.log10=Math.log10||function(n){return Math.log(n)/Math.LN10},self.log=self.log||{debug:function(){var n;(n=console).log.apply(n,arguments)},trace:function(){console.trace()},info:function(){var n;(n=console).info.apply(n,arguments)},warn:function(){var n;(n=console).warn.apply(n,arguments)},error:function(){var n;(n=console).error.apply(n,arguments)},setLevel:function(){},getLogger:function(){return log}},"function"!=typeof Object.assign&&(Object.assign=function(n,o){if(null==n)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(n),r=1;r<arguments.length;r++){var t=arguments[r];if(null!=t)for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}),void 0===document.hidden&&(document.hidden=!1);


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
